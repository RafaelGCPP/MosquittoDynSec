# This workflow will build the entirue project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Full CI/CD

on:
  workflow_dispatch:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0' # Your .NET version
      - name: Restore .NET dependencies
        working-directory: .
        run: dotnet restore
      - name: Build .NET solution
        working-directory: .
        run: dotnet build --configuration Release --property:OutputPath=${{ github.workspace }}/app/
      - name: Upload .NET artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build
          path: app

  build-angular:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: DynSec.Web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22 # Your Node.js version
          cache: 'npm'
          cache-dependency-path: DynSec.Web/package-lock.json
      - name: Install Angular dependencies
        run: npm ci
      - name: Build Angular app
        run: npm run build 
      - name: Upload Angular artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-build
          path: DynSec.Web/dist/dyn-sec.web/browser

  build-docker:
    needs: [build-dotnet, build-angular] # Docker job depends on .NET and Angular
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: Dockerfile.github 

      - name: Download .NET artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-build
          path: app

      - name: Download Angular artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-build
          path: app/wwwroot

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: rafaelgcpp/mosquitto-dynsec-manager

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: ./Dockerfile.github
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: rafaelgcpp/mosquitto-dynsec-manager
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true